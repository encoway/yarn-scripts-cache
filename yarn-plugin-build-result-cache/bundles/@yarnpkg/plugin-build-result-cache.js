/* eslint-disable */
//prettier-ignore
module.exports = {
name: "@yarnpkg/plugin-build-result-cache",
factory: function (require) {
"use strict";var plugin=(()=>{var W=Object.create;var p=Object.defineProperty;var k=Object.getOwnPropertyDescriptor;var D=Object.getOwnPropertyNames;var A=Object.getPrototypeOf,L=Object.prototype.hasOwnProperty;var d=(t=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(t,{get:(e,r)=>(typeof require<"u"?require:e)[r]}):t)(function(t){if(typeof require<"u")return require.apply(this,arguments);throw new Error('Dynamic require of "'+t+'" is not supported')});var R=(t,e)=>{for(var r in e)p(t,r,{get:e[r],enumerable:!0})},g=(t,e,r,a)=>{if(e&&typeof e=="object"||typeof e=="function")for(let o of D(e))!L.call(t,o)&&o!==r&&p(t,o,{get:()=>e[o],enumerable:!(a=k(e,o))||a.enumerable});return t};var K=(t,e,r)=>(r=t!=null?W(A(t)):{},g(e||!t||!t.__esModule?p(r,"default",{value:t,enumerable:!0}):r,t)),M=t=>g(p({},"__esModule",{value:!0}),t);var G={};R(G,{default:()=>z});var h=d("@yarnpkg/core");var u=d("@yarnpkg/core"),f=d("@yarnpkg/fslib");function O(t,e){if(typeof t!="object")return e.reportError(u.MessageName.UNNAMED,"build-result-cache-rc.json is not valid: config is not an object!"),!1;if(!Array.isArray(t.scriptsToCache))return e.reportError(u.MessageName.UNNAMED,"build-result-cache-rc.json is not valid: config.scriptsToCache is not an array!"),!1;if(t.scriptsToCache.find(r=>typeof r!="string")!==void 0)return e.reportError(u.MessageName.UNNAMED,"build-result-cache-rc.json is not valid: config.scriptsToCache should only contain strings!"),!1;if(t.remoteCaches){if(!Array.isArray(t.remoteCaches))return e.reportError(u.MessageName.UNNAMED,"build-result-cache-rc.json is not valid: config.remoteCaches is not an array!"),!1;if(t.remoteCaches.find(r=>typeof r!="string")!==void 0)return e.reportError(u.MessageName.UNNAMED,"build-result-cache-rc.json is not valid: config.remoteCaches should only contain strings!"),!1;if(t.remoteCaches.find(r=>!H(r))!==void 0)return e.reportError(u.MessageName.UNNAMED,"build-result-cache-rc.json is not valid: config.remoteCaches should only contain valid URLs!"),!1}return!0}function H(t){try{return new URL(t),!0}catch{return!1}}async function F(t,e){let r=f.ppath.join(t,(0,f.toFilename)("build-result-cache-rc.json"));if(await f.xfs.existsPromise(r)){let a=await f.xfs.readFilePromise(r,"utf-8");try{let o=JSON.parse(a);if(O(o,e))return o}catch(o){e.reportErrorOnce(u.MessageName.EXCEPTION,"build-result-cache-rc.json is not valid:"),e.reportExceptionOnce(o)}}}var c=d("@yarnpkg/fslib"),y=class{constructor(e){this.cwd=e}async saveCacheEntry(e){let r=Date.now().toString()+".json",a=JSON.stringify(e),o=c.ppath.join(this.cwd,(0,c.toFilename)(".build-result-cache"));await c.xfs.mkdirPromise(o,{recursive:!0});let i=c.ppath.join(o,(0,c.toFilename)(r));await c.xfs.writeFilePromise(i,a)}async loadCacheEntry(e){let r=c.ppath.join(this.cwd,(0,c.toFilename)(".build-result-cache"));if(!await c.xfs.existsPromise(r))return;let a=await c.xfs.readdirPromise(r);for(let o of a){let i=c.ppath.join(r,o),s=await c.xfs.readFilePromise(i,"utf8"),l=JSON.parse(s);if(B(e,l.key))return l}}};function B(t,e){return JSON.stringify(t)===JSON.stringify(e)}var C=class{constructor(e){this.url=e}async saveCacheEntry(e){}async loadCacheEntry(e){}};function j(t,e){let r=[new y(t)];return e.remoteCaches&&e.remoteCaches.forEach(a=>r.push(new C(new URL(a)))),r}var n=d("@yarnpkg/fslib"),v=K(d("crypto"));async function N(t,e,r){let a=await S(t,e),o=await V(t.cwd),i={key:a,value:o};for(let s of r)await s.saveCacheEntry(i)}async function x(t,e,r){let a=await S(t,e);for(let o of r){let i=await o.loadCacheEntry(a);if(i)return await J(t.cwd,i.value),!0}return!1}async function S(t,e){var b;let r=t.script,a=t.args,o=e.lockFileChecksum,i=e.topLevelWorkspace.locator.locatorHash,s=(b=e.tryWorkspaceByCwd(t.cwd))==null?void 0:b.locator.locatorHash,l=n.ppath.join(t.cwd,(0,n.toFilename)("src")),m=await P(l),E={};for(let w of m){let U=n.ppath.relative(l,w);E[U]=await T(w)}return{script:r,args:a,lockFileChecksum:o,topLevelWorkspaceLocatorHash:i,workspaceLocatorHash:s,fileHashes:E}}async function T(t){let e=v.default.createHash("sha512"),r=await n.xfs.readFilePromise(t,"base64");return e.update(r),e.digest("base64")}async function V(t){let e=n.ppath.join(t,(0,n.toFilename)("bin")),r=await P(e),a={};for(let o of r){let i=n.ppath.relative(e,o);a[i]=await n.xfs.readFilePromise(o,"base64")}return{fileContents:a}}async function J(t,e){let r=n.ppath.join(t,(0,n.toFilename)("bin"));for(let[a,o]of Object.entries(e.fileContents)){let i=n.ppath.join(r,a),s=n.ppath.dirname(i);await n.xfs.mkdirPromise(s,{recursive:!0}),await n.xfs.writeFilePromise(i,o,{encoding:"base64"})}}async function P(t){let e=[],r=await n.xfs.readdirPromise(t);for(let a of r){let o=n.ppath.join(t,a),i=await n.xfs.statPromise(o);i.isFile()?e.push(o):i.isDirectory()&&e.push(...await P(o))}return e}async function I(t){let e=h.Configuration.create(t.cwd);return h.StreamReport.start({configuration:e,includeFooter:!1,stdout:t.stdout},async()=>{})}var X=async(t,e,r,a,o)=>{let i=await I(o),s=await F(o.cwd,i);if(s&&s.scriptsToCache.includes(a)){let l=j(o.cwd,s);return async()=>{if(await x(o,e,l))return i.reportInfo(h.MessageName.UNNAMED,"Build result was restored from cache!"),Promise.resolve(0);{let m=await t();return m===0&&(await N(o,e,l),i.reportInfo(h.MessageName.UNNAMED,"Build result cache was updated!")),m}}}else return t},q={hooks:{wrapScriptExecution:X}},z=q;return M(G);})();
return plugin;
}
};
