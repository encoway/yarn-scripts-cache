/* eslint-disable */
//prettier-ignore
module.exports = {
name: "@yarnpkg/plugin-build-cache",
factory: function (require) {
"use strict";var plugin=(()=>{var d=Object.create;var c=Object.defineProperty;var b=Object.getOwnPropertyDescriptor;var C=Object.getOwnPropertyNames;var g=Object.getPrototypeOf,w=Object.prototype.hasOwnProperty;var u=(e=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(e,{get:(t,r)=>(typeof require<"u"?require:t)[r]}):e)(function(e){if(typeof require<"u")return require.apply(this,arguments);throw new Error('Dynamic require of "'+e+'" is not supported')});var E=(e,t)=>{for(var r in t)c(e,r,{get:t[r],enumerable:!0})},f=(e,t,r,i)=>{if(t&&typeof t=="object"||typeof t=="function")for(let n of C(t))!w.call(e,n)&&n!==r&&c(e,n,{get:()=>t[n],enumerable:!(i=b(t,n))||i.enumerable});return e};var F=(e,t,r)=>(r=e!=null?d(g(e)):{},f(t||!e||!e.__esModule?c(r,"default",{value:e,enumerable:!0}):r,e)),j=e=>f(c({},"__esModule",{value:!0}),e);var N={};E(N,{default:()=>H});var a=u("@yarnpkg/fslib"),h=F(u("crypto"));async function P(e,t){let r=await m(e,t),i=await x(e);await K(e,{key:r,value:i})}async function y(e,t){let r=await m(e,t),i=await O(e,r);return i?(await k(e,i.value),!0):!1}async function m(e,t){let r=a.ppath.join(e,(0,a.toFilename)("src")),i=await l(r),n={};for(let o of i){let s=await a.xfs.statPromise(o),p=a.ppath.relative(r,o);n[p]=await v(o)}return{fileHashes:n}}async function v(e){let t=h.default.createHash("md5"),r=await a.xfs.readFilePromise(e);return t.update(r),t.digest("base64")}async function x(e){let t=a.ppath.join(e,(0,a.toFilename)("bin")),r=await l(t),i={};for(let n of r){let o=a.ppath.relative(t,n);i[o]=await a.xfs.readFilePromise(n,"utf8")}return{fileContents:i}}async function K(e,t){let r=Date.now().toString()+".json",i=JSON.stringify(t),n=a.ppath.join(e,(0,a.toFilename)("my-cache")),o=a.ppath.join(n,(0,a.toFilename)(r));await a.xfs.writeFilePromise(o,i)}async function O(e,t){let r=a.ppath.join(e,(0,a.toFilename)("my-cache")),i=await l(r);for(let n of i){let o=await a.xfs.readFilePromise(n,"utf8"),s=JSON.parse(o);if(S(t,s.key))return s}}function S(e,t){return JSON.stringify(e)===JSON.stringify(t)}async function k(e,t){let r=a.ppath.join(e,(0,a.toFilename)("bin"));for(let[i,n]of Object.entries(t.fileContents)){let o=a.ppath.join(r,i),s=a.ppath.dirname(o);await a.xfs.mkdirPromise(s,{recursive:!0}),await a.xfs.writeFilePromise(o,n)}}async function l(e){let t=[],r=await a.xfs.readdirPromise(e);for(let i of r){let n=a.ppath.join(e,i),o=await a.xfs.statPromise(n);o.isFile()?t.push(n):o.isDirectory()&&t.push(...await l(n))}return t}var D={hooks:{wrapScriptExecution:async(e,t,r,i,n)=>{let o=n.args.indexOf("--use-build-cache");return o>-1?(n.args.splice(o,1),async()=>{if(await y(n.cwd,t))return console.log("Restored from cache!"),Promise.resolve(0);{let s=await e();return s===0&&(await P(n.cwd,t),console.log("Cache updated!")),s}}):e}}},H=D;return j(N);})();
return plugin;
}
};
